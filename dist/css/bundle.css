/*  =========================================================================
    foundation.engine
    This file contains all foundation variables functions & mixins and acts
    as a "engine" for your project.
    ========================================================================= */
/*  Settings
    Global & project specific variables & config switches
    ========================================================================= */
/*  =========================================================================
    vars
    This file contains all foundation global variables.
    ========================================================================= */
/*  =========================================================================
    $OVERRIDES
    Any variables you find set in Blocss that you do not wish to keep, simply
    redefine here. This means that if Blocss sets your
    `$blocss-base-font-size` at 16px and you wish it to be 14px, simply
    redeclare that variable in this file.
    ========================================================================= */
/*  Responsive
    Define your breakpoints. The first value is the appendix that shall be used
    for your classes (e.g. `.classname@lap`), the second value is the media
    query that the breakpoint fires at.
    ========================================================================= */
/*  =========================================================================
    $CUSTOM
    Place any of your own variables that sit on top of Blocss here.
    Please use the `!default` flag because variables defined here can be
    overwritten by the project
    ========================================================================= */
/*  Colors
    ========================================================================= */
/*  Sizes
    ========================================================================= */
/*  Animations
    ========================================================================= */
/*  Misc cosmetic
    ========================================================================= */
/*  Tools
    Default mixins & functions
    ========================================================================= */
/*  =========================================================================
    defaults
    Blocss default variables. Redefine and override them in your
    application-level `_vars.scss` file.
    ========================================================================= */
/*  Typography
    ========================================================================= */
/*  Spacing
    Assign our `$blocss-base-line-height` to a new spacing variable for
    more transparency
    ========================================================================= */
/*  Namespace
    Would you like blocss classes to be used with a different namespace?
    ========================================================================= */
/*  Responsive
    Define your breakpoints. The first value is the appendix that shall be used
    for your classes (e.g. `.classname@lap`), the second value is the media
    query that the breakpoint fires at.
    ========================================================================= */
/*  =========================================================================
    functions
    ========================================================================= */
/*  Variables
    ========================================================================= */
/*  Functions
    ========================================================================= */
/**
 * Value to rem
 */
/**
 * Value to em
 */
/**
 * A small, internally-used function to remove the units from a given value.
 */
/*  =========================================================================
    mixins.rem
    Rem converter, converts `px` values to `rem` values
    ========================================================================= */
/**
 * Sample: @include blocss-rem(margin, 0 auto 300px, !important);
 */
/*  =========================================================================
    mixins.font-size
    ========================================================================= */
/**
 * Calculates font, rem font size & line height
 * $multiplier: multiplies line height by the given value
 * $line-height: include line height or not
 * The line height parameter can also be used as the multiplier
 *
 * Sample usage @include blocss-font-size(18px, 2);
 */
/*  =========================================================================
    mixins.media-query
    Enclose a block of code with a media query as named in `$blocss-breakpoints`.
    ========================================================================= */
/*  =========================================================================
    foundation.generic
    Ground-zero styles, only global
    ========================================================================= */
/*  Imports
    ========================================================================= */
/*! normalize.css v6.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/*  =========================================================================
    reset
    A thin layer on top of normalize.css that provides a starting point more
    suitable for web applications. Removes the default spacing and border for
    appropriate elements.
    ========================================================================= */
/**
 * 1. Set the global `box-sizing` state to `border-box`. As per:
 *    paulirish.com/2012/box-sizing-border-box-ftw
 * 2. Always add the horizontal scrollbar to prevent layout shifting
 * 3. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  box-sizing: border-box;
  /* [1] */
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  -moz-osx-font-smoothing: grayscale;
  /* [3] */
  -webkit-font-smoothing: antialiased;
  /* [3] */ }

*, *:before, *:after {
  box-sizing: inherit;
  /* [1] */ }

/**
 * The usual resetting of margins, paddings, borders etc.
 */
blockquote,
dl,
dd,
ol,
ul,
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre,
fieldset,
hr {
  margin: 0; }

fieldset,
ol,
ul {
  padding: 0; }

iframe,
fieldset {
  border: 0; }

/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

/**
 * Image
 *
 * 1. By default all images are fluid
 * 2. Render `alt` visually offset when images don't load
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */ }

/*  =========================================================================
    vertical-rhythm
    Contains several high-level rulesets which apply a consistent, shared
    declaration (typically margins) across a number of elements.
    ========================================================================= */
/**
 * Toplevel HTML element
 * 1. Apply the `$blocss-base-font-size`, `$blocss-line-height-ratio`
 */
html {
  font-size: 1.25em;
  /* [1] */
  line-height: 1.5;
  /* [1] */ }

/**
 * Applies vertical rhythm to designated elements
 * As per: http://csswizardry.com/2012/06/single-direction-margin-declarations
 */
hgroup,
ul,
ol,
dl,
blockquote,
p,
address,
table,
fieldset,
pre,
hr {
  /* Loop over values */
  margin-bottom: 1.5rem ; }

/**
 * Default indentation value for lists
 */
ul,
ol,
dd {
  /* Loop over values */
  margin-left: 1.5rem ; }

html {
  font-family: "EtelkaPro", sans-serif;
  color: #333333; }

body {
  margin: 0; }

h1,
h2,
h3,
h4,
h5,
h6,
.u-heading {
  font-family: "EtelkaPro", sans-serif;
  /* Loop over values */
  margin-bottom: 0.75rem ;
  /* Loop over values */
  font-size: 1rem ;
  line-height: 1.33;
  font-weight: 300;
  color: #ffffff; }
  h1 > a,
  h2 > a,
  h3 > a,
  h4 > a,
  h5 > a,
  h6 > a,
  .u-heading > a {
    color: inherit;
    text-decoration: none; }
    h1 > a:active, h1 > a:hover, h1 > a:focus,
    h2 > a:active,
    h2 > a:hover,
    h2 > a:focus,
    h3 > a:active,
    h3 > a:hover,
    h3 > a:focus,
    h4 > a:active,
    h4 > a:hover,
    h4 > a:focus,
    h5 > a:active,
    h5 > a:hover,
    h5 > a:focus,
    h6 > a:active,
    h6 > a:hover,
    h6 > a:focus,
    .u-heading > a:active,
    .u-heading > a:hover,
    .u-heading > a:focus {
      color: #026c91; }

h1 {
  /* Loop over values */
  font-size: 3rem ; }

h2 {
  /* Loop over values */
  font-size: 1.5rem ; }

h3 {
  /* Loop over values */
  font-size: 1.2rem ; }

h4 {
  /* Loop over values */
  font-size: 1rem ; }

h5 {
  /* Loop over values */
  font-size: 1rem ; }

h6 {
  /* Loop over values */
  font-size: 0.8rem ; }

@font-face {
  font-family: 'EtelkaPro';
  src: url("../fonts/Etelka/etelka-light.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/*  =========================================================================
    foundation.objects
    ========================================================================= */
/*  Imports
    ========================================================================= */
/*  =========================================================================
    objects.layout
    Fluid and nestable layout system based on flexbox
    ========================================================================= */
/*  Variables
    Variables used in this module
    ========================================================================= */
/**
 * Namespacing
 */
/**
 * The default gutter
 */
/**
 * Define which namespaced breakpoints you would like to generate for `fit` & `fill`.
 * This is handy if you only need `fit` on, say, desk, or you only need `fill`
 * at mobile sizes. It allows you to only compile as much CSS as you need.
 * All are empty by default, but you can add breakpoints at will.
 *
 * $blocss-breakpoint-has-layout-x:       ('lap', 'desk');
 *
 * Note: the name of the breakpoint must exist in the list of `$blocss-breakpoints`
 *       in the Blocss base repository
 */
/*  Functions/Mixins
    Functions and/or mixins used in this module
    ========================================================================= */
/**
 * Modifier: Make a unit shrink wrap its content.
 */
/**
 * Modifier: Make a cell fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 */
/*  Layout root
    ========================================================================= */
/**
 * All content must be contained within child `layout__cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.o-layout {
  display: flex;
  /* [1] */
  flex-flow: row wrap;
  padding: 0;
  /* [1] */
  margin-left: 0;
  /* [1] */
  list-style: none;
  /* [1] */ }

/**
 * Modifier: center align all layout cells
 */
.o-layout--align-center {
  justify-content: center; }

/**
 * Modifier: right align all layout cells
 */
.o-layout--align-right {
  justify-content: flex-end; }

/**
 * Modifier: middle-align layout cells
 */
.o-layout--align-middle {
  align-items: center; }

/**
 * Modifier: bottom-align layout cells
 */
.o-layout--align-bottom {
  align-items: flex-end; }

/**
 * Modifier: reverse all cells
 */
.o-layout--reverse {
  flex-direction: row-reverse; }

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.o-layout--fit > .o-layout__cell {
  flex: 1 1 0%;
  /* [1] */ }

/**
 * Modifier: all cells match height of tallest cell in a row
 * 1. The direct child of the flexbox must be a single element when you want
 *    to use equalheight
 */
.o-layout--equalheight > .o-layout__cell {
  display: flex; }
  .o-layout--equalheight > .o-layout__cell > * {
    width: 100%;
    /* [1] */ }

/**
 * Modifier: Gutter
 */
.o-layout--gutter {
  /* Loop over values */
  margin-left: -1.5rem ; }
  .o-layout--gutter > .o-layout__cell {
    /* Loop over values */
    padding-left: 1.5rem ; }

/**
 * Modifier: Tiny gutter
 */
.o-layout--gutter-tiny {
  /* Loop over values */
  margin-left: -0.375rem ; }
  .o-layout--gutter-tiny > .o-layout__cell {
    /* Loop over values */
    padding-left: 0.375rem ; }

/**
 * Modifier: Small gutter
 */
.o-layout--gutter-small {
  /* Loop over values */
  margin-left: -0.75rem ; }
  .o-layout--gutter-small > .o-layout__cell {
    /* Loop over values */
    padding-left: 0.75rem ; }

/**
 * Modifier: Large gutter
 */
.o-layout--gutter-large {
  /* Loop over values */
  margin-left: -3rem ; }
  .o-layout--gutter-large > .o-layout__cell {
    /* Loop over values */
    padding-left: 3rem ; }

/**
 * Modifier: Huge gutter
 */
.o-layout--gutter-huge {
  /* Loop over values */
  margin-left: -6rem ; }
  .o-layout--gutter-huge > .o-layout__cell {
    /* Loop over values */
    padding-left: 6rem ; }

/*  Layout cell
    ========================================================================= */
/**
 * No explicit width by default. Rely on combining `layout__cell` with a dimension
 * utility or a component class that extends 'layout'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `layout__cell` container
 */
.o-layout__cell {
  flex-basis: 100%;
  /* [1] */
  min-width: 0;
  /* [2] */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `layout` object.
 */
.o-layout__cell--center {
  margin-left: auto;
  margin-right: auto; }

/**
 * Modifier: Make a cell shrink wrap its content.
 */
.o-layout__cell--fit {
  flex-basis: auto; }

/**
 * Modifier: Make a cell fill the remaining space.
 */
.o-layout__cell--fill {
  flex: 1 1 0%;
  /* [1] */
  flex-basis: 0%;
  /* [2] */ }

/*  Responsive
    ========================================================================= */
@media only screen and (min-width: 480px) {
  .o-layout__cell--fit\@lap {
    flex-basis: auto; } }

@media only screen and (min-width: 960px) {
  .o-layout__cell--fit\@desk {
    flex-basis: auto; } }

@media only screen and (min-width: 480px) {
  .o-layout__cell--fill\@lap {
    flex: 1 1 0%;
    /* [1] */
    flex-basis: 0%;
    /* [2] */ } }

@media only screen and (min-width: 960px) {
  .o-layout__cell--fill\@desk {
    flex: 1 1 0%;
    /* [1] */
    flex-basis: 0%;
    /* [2] */ } }

/*  =========================================================================
    objects.flexembed
    For use with multi-media embeds, such as videos or slideshows, that need to
    retain a specific aspect ratio but adapt to elements of variable widths.
    ========================================================================= */
/*  Variables
    Variables used in this module
    ========================================================================= */
/**
 * Namespacing
 */
/**
 * Ratio's
 */
/*  Module
    Core module
    ========================================================================= */
/**
 * 1. Default cropping is a perfect square
 */
.o-flexembed {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
  padding-bottom: 100%;
  /* [1] */ }

/**
 * The actual embed/item
 */
.o-flexembed__item,
.o-flexembed > iframe,
.o-flexembed > embed,
.o-flexembed > object {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%; }

/*  Generate ratios
    ========================================================================= */
.o-flexembed--2by1 {
  padding-bottom: 50%; }

.o-flexembed--4by3 {
  padding-bottom: 75%; }

.o-flexembed--16by9 {
  padding-bottom: 56.25%; }

/*  =========================================================================
    foundation.utilities
    ========================================================================= */
/*  Imports
    ========================================================================= */
/*  =========================================================================
    utilities.fractions
    Sizes in human readable format. These are used in conjunction with other
    objects and abstractions found in blocss, most commonly the layout system
    and tables
    ========================================================================= */
/*  Variables
    Variables used in this module
    ========================================================================= */
/**
 * Namespacing
 */
/**
 * Fractions, makes it easy to create several proportional
 * dimensions (e.g., both a 2-part and a 12-part grid).
 *
 * For example, `2 4 6 12` will let you use the u-fraction-1-2, u-fraction-2-4,
 * fraction-3-6, and fraction-6-12 classes to specify that an element should
 * take up 50% of its container.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each
 * of the dimensions. It allows you to only compile as much CSS as you need.
 * All are empty by default, but you can add breakpoints at will.
 *
 * $blocss-breakpoint-has-fractions: ('palm', 'desk');
 *
 * Note: the name of the breakpoint must exist in the list of `$breakpoints`
 *       in the Blocss base repository
 */
/**
 * You can rename the fraction name & delimiter to your liking
 */
/*  Functions/Mixins
    Functions and/or mixins used in this module
    ========================================================================= */
/**
 * Fluid units
 * USAGE: provide a space-separated list of integers, each of which
 * represents the number of fractions that make up a unit component.
 * Optionally provide a modifier suffix that can be used to adjust
 * grids in different contexts (e.g. viewport dimensions).
 */
/* stylelint-disable max-nesting-depth */
/* stylelint-enable max-nesting-depth */
/*  Dimensions core
    ========================================================================= */
/**
 * Setup generic widths
 */
/**
   * Proportional fractions
   * Specify the proportional width of an object.
   * Primarily for, but not limited to, use with `.grid__cell` components.
   * Intentional redundancy build into each set of unit classes.
   */
/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--1of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 8.33333% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--2of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 16.66667% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--3of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 25% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--4of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 33.33333% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--5of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 41.66667% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--6of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 50% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--7of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 58.33333% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--8of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 66.66667% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--9of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 75% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--10of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 83.33333% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--11of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 91.66667% !important; }

/**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
.u-fraction--12of12 {
  flex-basis: auto !important;
  /* [1] */
  width: 100% !important; }

/**
   * Auto modifier, shrinks to the available content
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   */
.u-fraction-auto {
  flex-basis: auto !important;
  /* [1] */
  width: auto !important; }

/*  Responsive
    ========================================================================= */
@media only screen and (min-width: 480px) {
  /**
   * Proportional fractions
   * Specify the proportional width of an object.
   * Primarily for, but not limited to, use with `.grid__cell` components.
   * Intentional redundancy build into each set of unit classes.
   */
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--1of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 8.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--2of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 16.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--3of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 25% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--4of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 33.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--5of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 41.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--6of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 50% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--7of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 58.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--8of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 66.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--9of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 75% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--10of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 83.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--11of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 91.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--12of12\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: 100% !important; }
  /**
   * Auto modifier, shrinks to the available content
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   */
  .u-fraction-auto\@lap {
    flex-basis: auto !important;
    /* [1] */
    width: auto !important; } }

@media only screen and (min-width: 960px) {
  /**
   * Proportional fractions
   * Specify the proportional width of an object.
   * Primarily for, but not limited to, use with `.grid__cell` components.
   * Intentional redundancy build into each set of unit classes.
   */
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--1of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 8.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--2of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 16.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--3of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 25% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--4of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 33.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--5of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 41.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--6of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 50% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--7of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 58.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--8of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 66.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--9of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 75% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--10of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 83.33333% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--11of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 91.66667% !important; }
  /**
       * Create units based on fractions
       * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
       */
  .u-fraction--12of12\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: 100% !important; }
  /**
   * Auto modifier, shrinks to the available content
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   */
  .u-fraction-auto\@desk {
    flex-basis: auto !important;
    /* [1] */
    width: auto !important; } }

/*  =========================================================================
    utilities.visually-hidden
    Hide only visually, but have it available for screenreaders
    ========================================================================= */
/*  Variables
    Variables used in this module
    ========================================================================= */
/**
 * Namespacing
 */
/**
 * Define which namespaced breakpoints you would like to generate.
 * It allows you to only compile as much CSS as you need. All are empty by
 * default, but you can add breakpoints at will.
 *
 * $blocss-breakpoint-has-visually-hidden:       ('lap', 'desk');
 *
 * Note: the name of the breakpoint must exist in the list of `$breakpoints`
 *       in the Blocss defaults
 */
/*  Functions/Mixins
    Functions and/or mixins used in this module
    ========================================================================= */
/*  Module
    Core module
    ========================================================================= */
.u-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*  Responsive
    ========================================================================= */
@media only screen and (max-width: 479px) {
  .u-visually-hidden\@palm {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }

/*  =========================================================================
    utilities.module
    Removes the `margin-bottom` of a modules last-childs.
    As per: http://css-tricks.com/spacing-the-bottom-of-modules/
    ========================================================================= */
/*  Variables
    Variables used in this module
    ========================================================================= */
/**
 * Namespacing
 */
/**
 * Depth
 */
/*  Functions/Mixins
    Functions and/or mixins used in this module
    ========================================================================= */
/*  Module
    Core module
    ========================================================================= */
.u-module > *:last-child, .u-module > *:last-child > *:last-child, .u-module > *:last-child > *:last-child > *:last-child, .u-module > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important; }

.c-button {
  border-radius: 6px;
  background-color: #ffffff;
  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.2);
  padding-top: calc(0.75rem);
  padding-bottom: calc(0.75rem);
  padding-left: calc(2rem);
  padding-right: calc(2rem);
  font-size: 0.9rem;
  font-weight: 500;
  line-height: 1.67;
  text-align: center;
  color: #1a171b;
  border: 0;
  cursor: pointer; }

.c-header {
  position: absolute;
  height: 60px;
  left: 0;
  right: 0;
  top: 0;
  background: #ffffff; }

.c-label {
  font-size: 0.7em;
  color: #ffffff;
  font-weight: 500;
  line-height: 2.14; }
  .c-label[for] {
    cursor: pointer; }

.c-input-text {
  display: block;
  width: 100%;
  vertical-align: middle;
  padding-top: calc(0.65rem);
  padding-bottom: calc(0.65rem);
  padding-right: calc(0.35rem);
  padding-left: calc(0.35rem);
  margin: 0;
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-bottom: 2px solid #ffffff;
  border-radius: 0rem;
  font: inherit;
  font-size: 1.5rem;
  appearance: none;
  background-color: transparent;
  line-height: 2rem;
  color: #ffffff; }
  .c-input-text::placeholder {
    color: #333333;
    opacity: 0.3; }
  .c-input-text.has-adjacent {
    padding-right: calc(0.35em - 2px + 2.25rem);
    /* [2] */ }
  .c-input-text.has-error {
    border-color: #d4302f; }
  .c-input-text.has-prefix {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    padding-left: 0.65em;
    /* [1] */ }
  .c-input-text.has-postfix {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0; }
  .o-form.is-humble .c-input-text {
    border-color: transparent;
    background-color: rgba(255, 255, 255, 0.3);
    color: #ffffff; }
    .o-form.is-humble .c-input-text::placeholder {
      color: rgba(255, 255, 255, 0.8); }
